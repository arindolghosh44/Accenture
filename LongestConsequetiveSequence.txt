class Solution {
    public int longestConsecutive(int[] nums) {
          if (nums == null || nums.length == 0) {
            return 0;
        }
         int n=nums.length;
         
         Arrays.sort(nums);
         int max=1;
         int count=1;
         for(int i=1;i<n;i++)
         {
         if(nums[i]-nums[i-1]==1)
         {
            count++;
         }
         else if(nums[i]-nums[i-1]==0)
         {
            continue;
         }
         else
         {
            if(max<count)
            {
                max=count;
            }
            count=1;
         }
         }
         if(max<count)
         {
            max=count;
         }
         return max;

                //using ArrayList



                /*

                     if (nums == null || nums.length == 0)
                      {
                        return 0;
                    }


                    
                    List <Integer> list=new ArrayList<>();
                    Arrays.sort(nums);
                    int count=1;
                    int initial=nums[0];
                    for(int i=1;i<nums.length;i++)
                    {
                            if(initial+1==nums[i])
                            {
                                initial=nums[i];
                                count++;
                            }
                            else if(initial==nums[i])
                            {
                                continue;
                            }
                            else
                            {
                                initial=nums[i];
                                list.add(count);
                                count=1;
                            }
                    }
                    list.add(count);
                    return Collections.max(list);
                */

    }
}